trigger:
  branches:
    include:
    - main
    - test
    - features/*
  tags:
    include:
    - "*"    
  paths:
    include:
    - terraform/*

pool:
  name: ahpazuremanageddevops

variables:
  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:    
    - template: variables/prd.yml
  - ${{ elseif eq(variables['Build.SourceBranch'], 'refs/heads/test') }}:    
    - template: variables/tst.yml
  - ${{ else }}:
    - template: variables/dev.yml


stages:
- stage: Deploy
  variables:
      - group: ${{variables.keyVaultName}}
  jobs:
  - job: terraform_plan
    steps:
    - script: |
        # Install Azure CLI
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        
        # Install Terraform
        wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt-get update && sudo apt-get install terraform
      displayName: 'Install Azure CLI and Terraform'


    - task: AzureCLI@2
      inputs:
        azureSubscription: $(serviceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo " ==== set Terraform values for using azure resources ====="
          export ARM_CLIENT_ID='$(apdap-devops-sc-client-id)'
          export ARM_CLIENT_SECRET=' $(apdap-devops-sc-client-secret)'
          export ARM_TENANT_ID='0d739c66-dcf8-4b06-87ab-9052bd918a5f'
          export ARM_SUBSCRIPTION_ID='$(dataPlatformSubscriptionId)'

          # Terraform steps
          az account set --subscription='$(dataPlatformSubscriptionId)'
          cd $(System.DefaultWorkingDirectory)/terraform

          terraform init -backend-config="backendconfigs/$(env).hcl"
          terraform plan -var-file="tfvars/$(env).tfvars"
          terraform apply -auto-approve -var-file="tfvars/$(env).tfvars"

        addSpnToEnvironment: true
      displayName: 'Terraform apply'
