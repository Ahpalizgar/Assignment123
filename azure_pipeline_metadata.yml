trigger:
  branches:
    include:
    - main
    - test
    - features/*
  tags:
    include:
    - "*"    
  paths:
    include:
    - platform/*

pool:
  name: ahpazuremanageddevops

variables:
  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags') }}:
    - template: variables/prd.yml
  - ${{ elseif eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:    
    - template: variables/acc.yml
  - ${{ elseif eq(variables['Build.SourceBranch'], 'refs/heads/test') }}:    
    - template: variables/tst.yml
  - ${{ else }}:
    - template: variables/dev.yml

parameters:
- name: env
  default: $(env)
- name: serviceConnection
  default: $(serviceConnection)
- name: dataPlatformPrincipalId
  default: $(apdap-devops-sc-dev-client-id)
- name: dataPlatformPrincipalKey
  default: $(apdap-devops-sc-dev-client-secret)
- name: dataPlatformSubscriptionId
  default: $(dataPlatformSubscriptionId)
- name: dataPlatformSubscriptionName
  default: $(dataPlatformSubscriptionName)

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo " ==== set Terraform values for using azure resources ====="
      export ARM_CLIENT_ID=${{ parameters.dataPlatformPrincipalId }}
      export ARM_CLIENT_SECRET=${{ parameters.dataPlatformPrincipalKey }}
      export ARM_TENANT_ID="0d739c66-dcf8-4b06-87ab-9052bd918a5f"
      export ARM_SUBSCRIPTION_ID=${{ parameters.dataPlatformSubscriptionId }}

      # Terraform steps
      az account set -s ${{ parameters.dataPlatformSubscriptionName }}
      cd $(System.DefaultWorkingDirectory)/terraform
      terraform init -backend-config="$(System.DefaultWorkingDirectory)/terraform/backendconfigs/${{ parameters.env }}.hcl"
      terraform apply -input=false -auto-approve "$(System.DefaultWorkingDirectory)/$(Build.BuildId).tfplan"
    addSpnToEnvironment: true
  displayName: Terraform apply