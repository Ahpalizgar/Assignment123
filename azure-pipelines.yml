trigger:
  branches:
    include:
    - main
    - test
    - features/*
  tags:
    include:
    - "*"    
  paths:
    include:
    - terraform/*

pool:
  name: ahpazuremanageddevops

variables:
  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:    
    - template: variables/prd.yml
  - ${{ elseif eq(variables['Build.SourceBranch'], 'refs/heads/test') }}:    
    - template: variables/tst.yml
  - ${{ else }}:
    - template: variables/dev.yml

stages:
- stage: Terraform_run
  variables:
    - group: ${{variables.keyVaultName}}
    - template: /variables/${{variables.env}}.yml
  jobs:
  - job: terraform_plan
    steps:
      # Add this step to install unzip
      - script: |
          echo "Installing unzip..."
          sudo apt-get update && sudo apt-get install -y unzip
        displayName: Install unzip
      
      - script: |
          echo "Installing Azure CLI..."
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        displayName: Install Azure CLI

      # TerraformInstaller step
      - task: TerraformInstaller@1
        inputs:
          version: 'latest'
      
      # Existing Terraform plan template
      - template: terraform/templates/terraform-plan.yml
        parameters:
          env: $(env)
          serviceConnection: $(serviceConnection)
          dataPlatformPrincipalId: $(apdap-devops-sc-client-id)
          dataPlatformPrincipalKey: $(apdap-devops-sc-client-secret)
          dataPlatformSubscriptionId: $(dataPlatformSubscriptionId)
          dataPlatformSubscriptionName: $(dataPlatformSubscriptionName)

      # - template: terraform/templates/terraform-apply.yml
      #   parameters:
      #     env: $(env)
      #     serviceConnection: $(serviceConnection)
      #     dataPlatformPrincipalId: $(apdap-devops-sc-client-id)
      #     dataPlatformPrincipalKey: $(apdap-devops-sc-client-secret)
      #     dataPlatformSubscriptionId: ${{ dataPlatformSubscriptionId }}
      #     dataPlatformSubscriptionName: ${{ dataPlatformSubscriptionName }}
